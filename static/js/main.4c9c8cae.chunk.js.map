{"version":3,"sources":["libs/storage.js","components/login.js","components/time_entry.js","components/main.js","index.js"],"names":["setUser","data","a","getUsers","users","JSON","parse","push","auth","Object","assign","isLogin","localStorage","setItem","stringify","authUser","checkUser","user","entries","getItem","to_return","saveTimeEntries","getTimeEntries","Login","toggleRegisterationPage","setState","isLoginPage","state","error","handleOnChange","e","target","name","value","email","user_name","password","this","freeze","filterUser","length","test","props","updateState","filter","toLowerCase","indexOf","className","type","placeholder","onChange","onClick","loginUser","registerUser","React","Component","TimeEntry","logOut","logoutUser","handleDropDown","project","task_name","start_date","end_date","timer","saveTimeEntry","map","time_entry","i","key","Main","isAuthenticat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c9c8cae.chunk.js","sourcesContent":["// constant value\nconst DATA_KEY = \"data-key\";\nconst Current_User = \"currentUser\";\nconst Time_Entries = \"time-entries\";\n// add new user\nasync function setUser(data) {\n  let users = await getUsers();\n  users = JSON.parse(users || \"[]\");\n  users.push(data);\n  var auth = {};\n  Object.assign(auth, { isLogin: true });\n  Object.assign(auth, data);\n  await localStorage.setItem(DATA_KEY, JSON.stringify(users));\n  await localStorage.setItem(Current_User, JSON.stringify(auth));\n}\n// auth user\nasync function authUser(data) {\n  var auth = {};\n  Object.assign(auth, { isLogin: true });\n  Object.assign(auth, data);\n  await localStorage.setItem(Current_User, JSON.stringify(auth));\n}\n// remove auth\nasync function logoutUser() {\n  let user = await checkUser(),\n    entries = [];\n  Object.assign(user, { isLogin: false });\n\n  await localStorage.setItem(Current_User, JSON.stringify(user));\n  await localStorage.setItem(Time_Entries, JSON.stringify(entries));\n}\n// access all the users\nasync function getUsers() {\n  const to_return = await localStorage.getItem(DATA_KEY);\n  return to_return;\n}\n\n// get info of a user\nasync function checkUser() {\n  const user = await localStorage.getItem(Current_User);\n  return user;\n}\n\n// store time entries\nasync function saveTimeEntries(data) {\n  let entries = await getTimeEntries();\n  entries = JSON.parse(entries || \"[]\");\n  entries.push(data);\n  await localStorage.setItem(Time_Entries, JSON.stringify(entries));\n}\n\nasync function getTimeEntries() {\n  const entries = await localStorage.getItem(Time_Entries);\n  return entries;\n}\n\nexport {\n  setUser,\n  getUsers,\n  checkUser,\n  logoutUser,\n  authUser,\n  getTimeEntries,\n  saveTimeEntries,\n};\n","import React from \"react\";\nimport { setUser, getUsers, authUser } from \"../libs/storage\";\nimport \"../css/main.css\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      user_name: \"\",\n      password: \"\",\n      error: null,\n      isLoginPage: false,\n    };\n  }\n  async registerUser() {\n    this.setState({ error: \"\" });\n    const data = Object.freeze({\n      email: this.state.email,\n      user_name: this.state.user_name,\n      password: this.state.password,\n    });\n    // Validation of input fields\n    var users = JSON.parse(await getUsers());\n    users = this.filterUser(users);\n    if (users.length > 0) {\n      this.setState({ error: \"Email already exist.\" });\n    } else if (\n      data.email.length === 0 &&\n      data.user_name.length === 0 &&\n      data.password.length === 0\n    ) {\n      this.setState({ error: \"Please fill the required fields.\" });\n    } else if (\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data.email)\n    ) {\n      this.setState({ error: \"Please check your email.\" });\n    } else if (data.password.length < 6) {\n      this.setState({ error: \"Password must be of minimum 6 letters.\" });\n    } else {\n      setUser(data);\n      this.props.updateState(\"isAuthenticat\", true);\n    }\n  }\n\n  async loginUser() {\n    var users = JSON.parse(await getUsers()),\n      user = this.filterUser(users);\n    if (user[0].password !== this.state.password) {\n      this.setState({ error: \"Password is incorrect.\" });\n    } else if (this.state.email.length === 0) {\n      this.setState({ error: \"Email field is required.\" });\n    } else if (user.length === 0) {\n      this.setState({ error: \"Email not exist.\" });\n    } else {\n      authUser(user[0]);\n      this.props.updateState(\"isAuthenticat\", true);\n    }\n  }\n\n  filterUser(users) {\n    if (users != null) {\n      return users.filter((user) => {\n        user = user.email.toLowerCase();\n        return user.indexOf(this.state.email) > -1;\n      });\n    } else {\n      return [];\n    }\n  }\n\n  toggleRegisterationPage = () => {\n    this.setState({ isLoginPage: !this.state.isLoginPage, error: \"\" });\n  };\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <div className=\"login\">\n        <p className=\"login-heading \">\n          {this.state.isLoginPage ? \"Login\" : \"Sign Up\"}\n        </p>\n\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"EMAIL ID*\"\n          value={this.state.email}\n          onChange={this.handleOnChange}\n        />\n        {this.state.isLoginPage ? null : (\n          <input\n            type=\"text\"\n            name=\"user_name\"\n            value={this.state.user_name}\n            placeholder=\"USER NAME*\"\n            onChange={this.handleOnChange}\n          />\n        )}\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={this.state.password}\n          placeholder=\"PASSWORD*\"\n          onChange={this.handleOnChange}\n        />\n        <p className=\"error-msg\">{this.state.error}</p>\n\n        {/* if isloginpage is true then show login page */}\n        {this.state.isLoginPage ? (\n          <>\n            <button onClick={() => this.loginUser()} className=\"login-btn\">\n              Login\n            </button>\n            <p className=\"link\" onClick={this.toggleRegisterationPage}>\n              Sign up\n            </p>\n          </>\n        ) : (\n          <>\n            <button onClick={() => this.registerUser()} className=\"login-btn\">\n              Sign up\n            </button>\n            <p className=\"link\" onClick={this.toggleRegisterationPage}>\n              Login\n            </p>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../css/main.css\";\nimport { logoutUser, saveTimeEntries, getTimeEntries } from \"../libs/storage\";\n\nclass TimeEntry extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      task_name: \"\",\n      project: \"\",\n      start_date: null,\n      end_date: null,\n      timer: null,\n      data: [],\n    };\n  }\n  async componentDidMount() {\n    let entries = JSON.parse(await getTimeEntries());\n    this.setState({ data: entries == null ? [] : entries });\n  }\n  // update to get entries after adding\n  async componentDidUpdate() {\n    let entries = JSON.parse(await getTimeEntries());\n    if (this.state.data.length !== entries.length) {\n      this.setState({ data: entries == null ? [] : entries });\n    }\n  }\n\n  // store time entries\n  async saveTimeEntry() {\n    const data = Object.freeze({\n      task_name: this.state.task_name,\n      project: this.state.project,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      timer: this.state.timer,\n    });\n    saveTimeEntries(data);\n    this.setState({\n      data:\n        JSON.parse(await getTimeEntries()) == null\n          ? []\n          : JSON.parse(await getTimeEntries()),\n      task_name: \"\",\n      project: \"\",\n      start_date: null,\n      end_date: null,\n      timer: 0,\n    });\n  }\n\n  logOut = () => {\n    logoutUser();\n    this.props.updateState(\"isAuthenticat\", false);\n  };\n\n  // handle input fields\n  handleOnChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleDropDown = (e) => {\n    this.setState({ project: e.target.value });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h4 className=\"logout-btn\" onClick={this.logOut}>\n          logout\n        </h4>\n        <h2 className=\"text-center\">Time Entry</h2>\n\n        {/*filds for adding new tasks */}\n        <div className=\"flex justify-between flex-wrap \">\n          <input\n            type=\"text\"\n            placeholder=\"Enter task name\"\n            className=\"text-white\"\n            name=\"task_name\"\n            value={this.state.task_name}\n            onChange={this.handleOnChange}\n          />\n          <select className=\"drop-down\" onChange={this.handleDropDown}>\n            <option>Library</option>\n            <option>Education</option>\n            <option>LMS</option>\n          </select>\n          <input\n            type=\"date\"\n            placeholder=\"Start date\"\n            name=\"start_date\"\n            onChange={this.handleOnChange}\n            className=\"text-white\"\n          />\n          <input\n            type=\"date\"\n            placeholder=\"End Date\"\n            name=\"end_date\"\n            onChange={this.handleOnChange}\n            className=\"text-white\"\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Set Timer In Minutes\"\n            name=\"timer\"\n            onChange={this.handleOnChange}\n            className=\"text-white\"\n          />\n          <button\n            className=\"btn bg-blue text-white\"\n            onClick={() => this.saveTimeEntry()}\n          >\n            Add\n          </button>\n        </div>\n        {/* show added tasks */}\n        <table className=\"mt-3\">\n          <thead>\n            <tr>\n              <th>Task Name</th>\n              <th>Project</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Timer</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((time_entry, i) => {\n              return (\n                <tr key={i}>\n                  <td>{time_entry.task_name}</td>\n                  <td>{time_entry.project}</td>\n                  <td>{time_entry.start_date}</td>\n                  <td>{time_entry.end_date}</td>\n                  <td>{time_entry.timer} min</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TimeEntry;\n","import React from \"react\";\nimport \"../css/main.css\";\nimport Login from \"./login\";\nimport TimeEntry from \"./time_entry\";\nimport { checkUser } from \"../libs/storage\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticat: false,\n    };\n  }\n  // is user login?\n  async componentDidMount() {\n    var user = JSON.parse(await checkUser());\n    if (user.isLogin) {\n      this.setState({ isAuthenticat: true });\n    }\n  }\n\n  // update state\n  updateState = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"Main\">\n        {this.state.isAuthenticat ? (\n          <header className=\"Main-header\">\n            <TimeEntry updateState={this.updateState} />\n          </header>\n        ) : (\n          <header className=\"Main-header flex justify-center\">\n            <Login updateState={this.updateState} />\n          </header>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport Main from \"./components/main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}